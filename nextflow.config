// Run the analysis on AWS Batch
process.executor = 'awsbatch'
// Run the analysis on the specified queue in AWS Batch

// Set a place to write temporary files which can be deleted after
// the workflow is completed. It can be useful to treat this as
// 'scratch' space which can be automatically deleted after 30 days
workDir = "s3://nextflow-tower-work"

// Mount the host folder /docker_scratch to /tmp within the running job
// Use /tmp for scratch space to provide a larger working directory
// Replace with the Job Role ARN for your account

// The use of aws.client.maxConnections = 4 is intended to prevent
// any errors resulting from too many requests to S3. Some users have
// noticed that while this may slow the rate of job submission, it
// can help prevent errors when running workflows with many thousands
// of tasks.

// Point to the main script in the repository
manifest.mainScript = 'midas.nf'

// Set up the resources needed for each step in different profiles
// the 'standard' profile is run by default, while the 'testing'
// profile can be invoked by adding `-profile testing` at runtime
profiles{
    standard {
        process {
            withLabel: 'io_limited' {
                cpus = { 1 * task.attempt }
                memory = { 2.GB * task.attempt }
                maxRetries = 3
            }
            withLabel: 'mem_medium' {
                cpus = { 4 * task.attempt }
                memory = { 30.GB * task.attempt }
                maxRetries = 3
            }
            withLabel: 'mem_veryhigh' {
                cpus = { 16 * task.attempt }
                memory = { 120.GB * task.attempt }
                maxRetries = 3
            }
        }
    }
    testing {
        process {
            executor = 'local'
            withLabel: 'io_limited' {
                cpus = 1
                memory = 1.GB
            }
            withLabel: 'mem_medium' {
                cpus = 1
                memory = 2.GB
            }
            withLabel: 'mem_veryhigh' {
                cpus = 1
                memory = 6.GB
            }
        }
        docker {
            enabled = true
            temp = 'auto'
        }
    }
}
